How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped me find the difference by highlighting what had changed

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When a bug is suddenly introduced it would allow for faster finding.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git provides an offline color coded record of changes.  But you have to remember
    to commit at regular intervals versus docs which always does.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is built for programming languages where multiple documents can often combine
    to create a larger program. Docs are generally single files and don't have 
    dependencies.

How can you use the commands git log and git diff to view the history of files?

    Typing Git Log will show you every commit for the project.  Then you can choose 2 ID's
    and use git diff to determine the differences between them.

How might using version control make you more confident to make changes that
could break something?

    You wouldn't have to worry about making a simple mistake that destroys your work.
    Instead knowing you could go back if needed easily.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to better track my code changes on my larger projects